
- name: Install Kubernetes
  include: ../../includes/install_binaries.yml
  vars:
    binaries:
      name: kubernetes
      version: "{{ version.kubernetes }}"
      commands:
        - kubelet
        - kubectl

- name: Create Kubernetes config directory
  file: path=/etc/kubernetes/manifests/ state=directory recurse=no owner=root group=root mode=0755

- name: Copy configuration
  template: src=kubernetes-{{ mode }}.yml dest=/etc/kubernetes/manifests/kubernetes.yaml

- name: Setup profile
  template: src=kubernetes_profile.sh dest=/etc/profile.d/kubernetes.sh mode=0644

- name: Check for ld-linux-armhf.so.3
  stat: path=/lib/ld-linux-armhf.so.3
  register: ld

- name: Link ld-linux-armhf.so.3 --> ld-linux.so.3
  file:
    src: /lib/ld-linux-armhf.so.3
    dest: /lib/ld-linux.so.3
    state: link
  when: ld.stat.exists

- name: Install kubelet service definition
  template: src=kubelet.service dest=/lib/systemd/system/kubelet.service owner=root group=root mode=0644
  register: result

- name: Reload systemd when service definition changed
  command: systemctl daemon-reload
  when: result|changed

- name: Enable and start kubelet service
  service: name=kubelet enabled=true state=started

- name: ensure api-server is running
  shell: "for i in `seq 1 30`; do sleep 3 && curl -f {{ master_ip }}:8080 && break; done"
